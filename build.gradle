// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: "config.gradle"
// This block encapsulates custom properties and makes them available to all
// modules in the project.
//ext{
//
//}
//用于定义适用于项目中所有模块的构建配置.
buildscript {
    ext.kotlin_version = "1.4.32"
    // 各个代码库的列出顺序决定了 Gradle 在这些代码库中搜索各个项目依赖项的顺序。
    // 例如，如果从代码库 A 和 B 均可获得某个依赖项，而您先列出了代码库 A，则 Gradle 会从代码库 A 下载该依赖项。
    repositories {
        // https://maven.aliyun.com/mvn/guide
        // 声明特定的 Maven 或 Ivy 代码库：
        maven { url 'https://maven.aliyun.com/repository/public'}
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/apache-snapshots' }
        // 如果您要从 Maven 中央代码库获取某些内容，则添加 mavenCentral()；
        // 对于本地代码库，则使用 mavenLocal()
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        // 指定用来编译应用的gradle版本
        // 指定依赖项时，不应使用动态版本号，如 'com.android.tools.build:gradle:3.+'。
        // 使用此功能可能会导致意外的版本更新和难以解析版本差异。
        classpath "com.android.tools.build:gradle:4.1.3"

        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // 添加protobuf plugin
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

        def nav_version = "2.3.5"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version"
    }
}
/**
 * The allprojects block is where you configure the repositories and
 * dependencies used by all modules in your project, such as third-party plugins
 * or libraries. However, you should configure module-specific dependencies in
 * each module-level build.gradle file. For new projects, Android Studio
 * includes JCenter and Google's Maven repository by default, but it does not
 * configure any dependencies (unless you select a template that requires some).
 */
allprojects {
    // 各个代码库的列出顺序决定了 Gradle 在这些代码库中搜索各个项目依赖项的顺序。
    // 例如，如果从代码库 A 和 B 均可获得某个依赖项，而您先列出了代码库 A，则 Gradle 会从代码库 A 下载该依赖项。
    repositories {
        // https://maven.aliyun.com/mvn/guide
        // 声明特定的 Maven 或 Ivy 代码库：
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/apache-snapshots' }
        // 如果您要从 Maven 中央代码库获取某些内容，则添加 mavenCentral()；
        // 对于本地代码库，则使用 mavenLocal()
        mavenLocal()
        mavenCentral()

        // If you're using a version of Gradle lower than 4.1, you must instead use:
        // maven {
        //     url 'https://maven.google.com'
        // }
        // An alternative URL is 'https://dl.google.com/dl/android/maven2/'
    }

}


task clean(type: Delete) {
    delete rootProject.buildDir
}